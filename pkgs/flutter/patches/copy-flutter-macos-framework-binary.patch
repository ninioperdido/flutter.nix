diff --git a/packages/flutter_tools/lib/src/build_system/targets/macos.dart b/packages/flutter_tools/lib/src/build_system/targets/macos.dart
index 366268d..2b3228e 100644
--- a/packages/flutter_tools/lib/src/build_system/targets/macos.dart
+++ b/packages/flutter_tools/lib/src/build_system/targets/macos.dart
@@ -8,7 +8,7 @@ import '../../base/file_system.dart';
 import '../../base/io.dart';
 import '../../base/process.dart';
 import '../../build_info.dart';
-import '../../globals.dart' as globals show xcode;
+import '../../globals.dart' as globals show xcode, fs;
 import '../../reporting/reporting.dart';
 import '../build_system.dart';
 import '../depfile.dart';
@@ -59,6 +59,8 @@ abstract class UnpackMacOS extends Target {
       '--delete',
       '--filter',
       '- .DS_Store/',
+      '--filter',
+      '- Versions/A/FlutterMacOS',
       basePath,
       environment.outputDir.path,
     ]);
@@ -71,15 +73,40 @@ abstract class UnpackMacOS extends Target {
       );
     }
 
+    final String srcFrameworkBinaryPath = globals.fs.directory(basePath)
+        .childDirectory('Versions')
+        .childDirectory('A')
+        .childFile('FlutterMacOS')
+        .resolveSymbolicLinksSync();
+
+    final File srcFrameworkBinary = globals.fs.file(srcFrameworkBinaryPath);
+
+    // rsync retains symlinks to the framework files to be signed, these files cannot be symlinks
+    // 'rsync -l' is unsuitable because symlinks are still valid for the framework's layout
     final File frameworkBinary = environment.outputDir
       .childDirectory('FlutterMacOS.framework')
       .childDirectory('Versions')
       .childDirectory('A')
       .childFile('FlutterMacOS');
     final String frameworkBinaryPath = frameworkBinary.path;
+
+    // flutter's build folder is user writable, fix the retained nix store permissions
+    // that affect copy and code signing
+    // 'chmod -R' doesn't seem to work so we just modify the 'A' directory
+    // ux issue, users will have to do a 'chmod -R u+w build' before running 'flutter clean' :/
+    environment.processManager.runSync(<String>[
+      'chmod',
+      'u+w',
+      frameworkBinary.parent.path,
+    ]);
+
+    srcFrameworkBinary.copySync(frameworkBinaryPath);
     if (!frameworkBinary.existsSync()) {
       throw Exception('Binary $frameworkBinaryPath does not exist, cannot thin');
     }
+    if (frameworkBinary.statSync().type == FileSystemEntityType.link) {
+      throw Exception('Binary $frameworkBinaryPath is a symlink, cannot thin');
+    }
     await _thinFramework(environment, frameworkBinaryPath);
   }
 
diff --git a/packages/flutter_tools/bin/macos_assemble.sh b/packages/flutter_tools/bin/macos_assemble.sh
index c8265f9..4cc2000 100755
--- a/packages/flutter_tools/bin/macos_assemble.sh
+++ b/packages/flutter_tools/bin/macos_assemble.sh
@@ -140,7 +140,40 @@ EmbedFrameworks() {
   # which could be a local build or an arch/type specific build.
 
   # Copy Xcode behavior and don't copy over headers or modules.
-  RunCommand rsync -av --delete --filter "- .DS_Store" --filter "- Headers" --filter "- Modules" "${BUILT_PRODUCTS_DIR}/FlutterMacOS.framework" "${xcode_frameworks_dir}/"
+  RunCommand rsync -av --delete \
+    --filter "- .DS_Store" \
+    --filter "- Headers" \
+    --filter "- Modules" \
+    --filter "- Versions/A/FlutterMacOS" \
+    --filter "- Versions/A/_CodeSignature" \
+    --filter "- Versions/A/Resources/Info.plist" \
+    --filter "- Versions/A/Resources/icudtl.dat" \
+    "${BUILT_PRODUCTS_DIR}/FlutterMacOS.framework" "${xcode_frameworks_dir}/"
+
+  # flutter's build folder is user writable, fix the retained nix store permissions
+  # that affect copy and code signing
+  # 'chmod -R' doesn't seem to work so we just modify the 'A' directory
+  # ux issue, users will have to do a 'chmod -R u+w build' before running 'flutter clean' :/
+  RunCommand chmod u+w "${xcode_frameworks_dir}/FlutterMacOS.framework/Versions/A/"
+  RunCommand chmod u+w "${xcode_frameworks_dir}/FlutterMacOS.framework/Versions/A/Resources/"
+
+  # rsync retains symlinks to the framework files to be signed, these files cannot be symlinks
+  # 'rsync -l' is unsuitable because symlinks are still valid for the framework's layout
+  local framework_files=(
+    "Versions/A/FlutterMacOS"
+    "Versions/A/Resources/Info.plist"
+    "Versions/A/Resources/icudtl.dat"
+  )
+  # shellcheck disable=SC2068
+  for framework_file in ${framework_files[@]}; do
+    local framework_file_path="${BUILT_PRODUCTS_DIR}/FlutterMacOS.framework/$framework_file"
+    if readlink -n "$framework_file_path" >/dev/null; then
+      framework_file_path="$(readlink -n "$framework_file_path")"
+    fi
+    local target_framework_file_path="${xcode_frameworks_dir}/FlutterMacOS.framework/$framework_file"
+    RunCommand cp -f "$framework_file_path" "$target_framework_file_path" || exit 1
+    RunCommand chmod u+w "$target_framework_file_path" || exit 1
+  done
 
   # Sign the binaries we moved.
   if [[ -n "${EXPANDED_CODE_SIGN_IDENTITY:-}" ]]; then
